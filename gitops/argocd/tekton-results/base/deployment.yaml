---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: tekton-results-api
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: v0.4.0
  name: tekton-results-api
  namespace: tekton-results
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tekton-results-api
      app.kubernetes.io/part-of: tekton-results
      app.kubernetes.io/version: v0.4.0
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app.kubernetes.io/name: tekton-results-api
        app.kubernetes.io/part-of: tekton-results
        app.kubernetes.io/version: v0.4.0
    spec:
      containers:
        - env:
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  key: DATABASE_USER
                  name: tekton-results-database
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: DATABASE_PASSWORD
                  name: tekton-results-database
            - name: DB_HOST
              value: tekton-results-database-service.tekton-results.svc.cluster.local
            - name: DB_NAME
              value: tekton_results
            - name: LOGS_DATA
              value: /app/tekton-results/logs
            - name: S3_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: tekton-results-s3-credentials
                  key: S3_ACCESS_KEY_ID
                  optional: true
            - name: S3_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: tekton-results-s3-credentials
                  key: S3_SECRET_ACCESS_KEY
                  optional: true
          image: docker.io/aandrienko/api-f5d789c64b384cabf8e800e360074264
          imagePullPolicy: Always
          name: api
          volumeMounts:
            - name: config
              mountPath: /etc/config/server
              readOnly: true
            - mountPath: /etc/tls
              name: tls
              readOnly: true
            - name: tekton-logs
              mountPath: "/app/tekton-results/logs"
      serviceAccountName: tekton-results-api
      volumes:
        - name: config
          configMap:
            name: tekton-results-api-config
        - name: tls
          secret:
            secretName: tekton-results-tls
        - name: tekton-logs
          persistentVolumeClaim:
            claimName: tekton-logs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: tekton-results-watcher
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: v0.4.0
  name: tekton-results-watcher
  namespace: tekton-results
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tekton-results-watcher
      app.kubernetes.io/part-of: tekton-results
      app.kubernetes.io/version: v0.4.0
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app.kubernetes.io/name: tekton-results-watcher
        app.kubernetes.io/part-of: tekton-results
        app.kubernetes.io/version: v0.4.0
    spec:
      containers:
        - args:
            - -api_addr
            - tekton-results-api-service.tekton-results.svc.cluster.local:50051
            - -auth_mode
            - token
          imagePullPolicy: Always
          image: docker.io/aandrienko/watcher-83f971ea227fb24157c0c699b824a628:latest
          name: watcher
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: tekton-results-config-logging
            - name: CONFIG_LEADERELECTION_NAME
              value: tekton-results-config-leader-election
            - name: CONFIG_OBSERVABILITY_NAME
              value: tekton-results-config-observability
            - name: METRICS_DOMAIN
              value: tekton.dev/results
          ports:
            - name: metrics
              containerPort: 9090
            - name: profiling
              containerPort: 8008
          volumeMounts:
            - name: tls
              mountPath: "/etc/tls"
              readOnly: true
      serviceAccountName: tekton-results-watcher
      volumes:
        - name: tls
          secret:
            secretName: tekton-results-tls
