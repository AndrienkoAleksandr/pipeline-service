---
# 1. Add kcp label to metadata
# 2. Add volumes and volume mount (kubeconfig) to mount the secret (kcp-kubeconfig) onto the container
# 3. Create an env variable called KUBECONFIG to use the secret
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tekton-triggers-core-interceptors
  namespace: tekton-pipelines
  # labels:
  #   kcp.dev/cluster: local
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: core-interceptors
      app.kubernetes.io/component: interceptors
      app.kubernetes.io/instance: default
      app.kubernetes.io/part-of: tekton-triggers
  template:
    spec:
      volumes:
        - name: kubeconfig
          secret:
            secretName: kcp-kubeconfig
      containers:
        - name: tekton-triggers-core-interceptors
          image: "quay.io/bnr/interceptors-3176d6a3f314c3655b30bfd36e421dd5"
          env:
            - name: KUBECONFIG
              value: /kubeconfig/admin.kubeconfig
          volumeMounts:
            - mountPath: /kubeconfig
              name: kubeconfig
---
# 1. Add protocol: TCP to the ports without which it fails
apiVersion: v1
kind: Service
metadata:
  name: tekton-triggers-core-interceptors
  namespace: tekton-pipelines
spec:
  ports:
    - name: "http"
      port: 80
      targetPort: 8082
      protocol: TCP